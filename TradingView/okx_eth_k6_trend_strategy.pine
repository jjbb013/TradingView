//@version=6
strategy("OKX ETH K6趋势策略", overlay=true, pyramiding=10, default_qty_type=strategy.cash, default_qty_value=100, currency=currency.USDT, commission_type=strategy.commission.percent, commission_value=0.1)

// ========== 策略参数 ==========
// 基础参数
var string SYMBOL = "ETHUSDT"
var int BAR_LENGTH = 5  // 5分钟
var float LEVERAGE = 1.0  // 杠杆倍数改为1倍
var float QTY_USDT = 100.0  // 保证金改为100USDT

// 振幅参数
var float MIN_BODY1 = 0.012  // K1最小实体振幅
var float MAX_BODY1 = 0.025  // K1最大实体振幅
var float MAX_TOTAL_RANGE = 0.05  // K2~K5总单向振幅最大值

// 止盈止损参数
var float TAKE_PROFIT_PERC = 0.015  // 止盈百分比
var float STOP_LOSS_PERC = 0.01     // 止损百分比

// 滑点参数
var float SLIPPAGE = 0.01  // 滑点1%

// ========== 计算函数 ==========
// 计算K线实体振幅
get_body_amplitude(open_price, close_price) =>
    math.abs(close_price - open_price) / open_price

// 计算K2~K5总单向振幅
get_total_range() =>
    total = 0.0
    for i = 1 to 4
        o = open[i]
        c = close[i]
        total := total + math.abs(c - o) / o
    total

// ========== 信号分析 ==========
// 获取K1实体振幅
body1 = get_body_amplitude(open, close)

// 获取K2~K5总单向振幅
total_range = get_total_range()

// K2方向判断
k2_open = open[1]
k2_close = close[1]
k2_is_long = k2_close > k2_open
k2_is_short = k2_close < k2_open

// 开仓条件判断
can_entry_long = body1 > MIN_BODY1 and body1 < MAX_BODY1 and total_range < MAX_TOTAL_RANGE and k2_is_long
can_entry_short = body1 > MIN_BODY1 and body1 < MAX_BODY1 and total_range < MAX_TOTAL_RANGE and k2_is_short

// ========== 下单逻辑 ==========
// 计算下单数量（基于100USDT保证金和1倍杠杆，必须为整数）
contract_value = close * 0.01  // ETH合约面值0.01
raw_position_size = QTY_USDT * LEVERAGE / contract_value
position_size = math.round(raw_position_size)  // 四舍五入为整数

// 计算止盈止损价格
long_take_profit = close * (1 + TAKE_PROFIT_PERC)
long_stop_loss = close * (1 - STOP_LOSS_PERC)
short_take_profit = close * (1 - TAKE_PROFIT_PERC)
short_stop_loss = close * (1 + STOP_LOSS_PERC)

// 考虑滑点的实际入场价格
long_entry_price = close * (1 + SLIPPAGE)
short_entry_price = close * (1 - SLIPPAGE)

// ========== 执行交易 ==========
if can_entry_long and position_size >= 1
    strategy.entry("Long", strategy.long, qty=position_size)
    strategy.exit("Long TP/SL", "Long", limit=long_take_profit, stop=long_stop_loss)

if can_entry_short and position_size >= 1
    strategy.entry("Short", strategy.short, qty=position_size)
    strategy.exit("Short TP/SL", "Short", limit=short_take_profit, stop=short_stop_loss)

// ========== 绘制指标 ==========
// 绘制K1振幅
plot(body1, "K1振幅", color=color.blue, linewidth=2)
hline(MIN_BODY1, "最小振幅", color=color.green, linestyle=hline.style_dashed)
hline(MAX_BODY1, "最大振幅", color=color.red, linestyle=hline.style_dashed)

// 绘制总振幅
plot(total_range, "K2~K5总振幅", color=color.orange, linewidth=2)
hline(MAX_TOTAL_RANGE, "最大总振幅", color=color.purple, linestyle=hline.style_dashed)

// 绘制K2方向
plotshape(k2_is_long, "K2多头", location=location.belowbar, color=color.green, style=shape.triangleup, size=size.small)
plotshape(k2_is_short, "K2空头", location=location.abovebar, color=color.red, style=shape.triangledown, size=size.small)

// 绘制开仓信号
plotshape(can_entry_long and position_size >= 1, "多头开仓", location=location.belowbar, color=color.lime, style=shape.circle, size=size.normal)
plotshape(can_entry_short and position_size >= 1, "空头开仓", location=location.abovebar, color=color.maroon, style=shape.circle, size=size.normal)

// ========== 表格显示 ==========
var table info_table = table.new(position.top_right, 2, 7, bgcolor=color.white, border_width=1)
if barstate.islast
    table.cell(info_table, 0, 0, "参数", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 1, 0, "数值", text_color=color.black, bgcolor=color.gray)
    
    table.cell(info_table, 0, 1, "K1振幅", text_color=color.black)
    table.cell(info_table, 1, 1, str.tostring(body1, "#.####"), text_color=color.blue)
    
    table.cell(info_table, 0, 2, "总振幅", text_color=color.black)
    table.cell(info_table, 1, 2, str.tostring(total_range, "#.####"), text_color=color.orange)
    
    table.cell(info_table, 0, 3, "K2方向", text_color=color.black)
    table.cell(info_table, 1, 3, k2_is_long ? "多头" : k2_is_short ? "空头" : "平盘", text_color=k2_is_long ? color.green : k2_is_short ? color.red : color.gray)
    
    table.cell(info_table, 0, 4, "开仓条件", text_color=color.black)
    table.cell(info_table, 1, 4, can_entry_long ? "多头" : can_entry_short ? "空头" : "无", text_color=can_entry_long ? color.lime : can_entry_short ? color.maroon : color.gray)
    
    table.cell(info_table, 0, 5, "下单数量", text_color=color.black)
    table.cell(info_table, 1, 5, str.tostring(position_size), text_color=color.black)
    
    table.cell(info_table, 0, 6, "持仓数量", text_color=color.black)
    table.cell(info_table, 1, 6, str.tostring(strategy.position_size), text_color=color.black)

// ========== 警报设置 ==========
alertcondition(can_entry_long and position_size >= 1, title="多头开仓信号", message="ETH多头开仓信号触发 - 价格: {{close}}, 数量: {{strategy.order.size}}")
alertcondition(can_entry_short and position_size >= 1, title="空头开仓信号", message="ETH空头开仓信号触发 - 价格: {{close}}, 数量: {{strategy.order.size}}") 